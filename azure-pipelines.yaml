trigger: none

pool:
  name: myAgent

variables:
  serviceConnection: 'mySC'
  azureLocation: 'East US 2'
  terraformWorkingDirectory: 'terraform/environments/test'
  storage_account_name: "tfstate297298811"
  container_name: "tfstateproject3"
  key: "tfstate.azure.proj3.1"
  agentName: 'myAgent'

stages:
- stage: tfdeploy
  #condition: and(succeeded(), eq(variables['disableBuild'], 'false')) # Condition to disable the stage
  jobs:
    - job: PrepareInfrastructure
      pool:
        name: $(agentName)
      steps:
      - task: TerraformInstaller@1
        displayName: Install Terraform
        inputs:
          terraformVersion: 'latest'
      - task: TerraformTaskV4@4
        displayName: Init
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: $(terraformWorkingDirectory)
          backendServiceArm: $(serviceConnection)
          backendAzureRmResourceGroupName: 'Azuredevops'
          backendAzureRmStorageAccountName: $(storage_account_name)
          backendAzureRmContainerName: $(container_name)
          backendAzureRmKey: $(key)
      - task: TerraformTaskV4@4
        displayName: Plan
        inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: $(terraformWorkingDirectory)
          environmentServiceNameAzureRM: $(serviceConnection)
      - task: TerraformTaskV4@4
        displayName: Apply
        inputs:
          provider: 'azurerm'
          command: 'apply'
          workingDirectory: $(terraformWorkingDirectory)
          environmentServiceNameAzureRM: $(serviceConnection)

- stage: Build
  #condition: and(succeeded(), eq(variables['disableBuild'], 'false')) # Condition to disable the stage
  jobs:
    - job: Build
      pool:
        name: $(agentName)
      steps:
      - task: ArchiveFiles@2
        displayName: 'Archive FakeRestAPI'
        inputs:
          rootFolderOrFile: 'automatedtesting/jmeter/fakerestapi'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
      - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
        displayName: 'Upload Package'
        artifact: drop-fakerestapi

- stage: Deploy
  #condition: and(succeeded(), eq(variables['disableBuild'], 'false')) # Condition to disable the stage
  jobs:
    - deployment: FakeRestAPI
      pool:
        name: $(agentName)
      environment: 'test-env'
      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureWebApp@1
              displayName: 'Deploy Azure Web App'
              inputs:
                azureSubscription: $(serviceConnection)
                appName: 'MyAppService-AppService'
                appType: webApp
                package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
    - deployment: VirtualMachineDeploy
      displayName: Deploy the virtual Machine
      environment:
        name: 'test-env'
        resourceType: VirtualMachine
      strategy:
        runOnce:
          deploy:
            steps:
            - task: Bash@3
              displayName: Configure selenium
              inputs:
                targetType: 'inline'
                workingDirectory: '/home/myAdmin'
                script: |
                  #! /bin/bash
                  sudo apt-get update
                  sudo apt-get upgrade -y
                  sudo apt-get install python3-pip unzip expect -y
                  sudo apt-get install -y chromium-browser
                  pip3 install selenium
                  sudo rm -rf chromedriver*
                  wget https://chromedriver.storage.googleapis.com/96.0.4664.18/chromedriver_linux64.zip # update the version here
                  unzip chromedriver*.zip
                  sudo mv chromedriver -f /usr/bin

- stage: Test
  jobs:
  - job: PostmanTests
    displayName: Postman Tests
    pool:
        name: $(agentName)
    steps:
    - task: Bash@3
      displayName: Install newman
      inputs:
        targetType: 'inline'
        script: |
          #! /bin/bash
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
          source ~/.nvm/nvm.sh
          nvm install 16
          nvm use 16
          nvm alias default 16
          npm install -g newman
          newman run automatedtesting/postman/Data\ Validation\ Test\ Suite.postman_collection.json -e automatedtesting/postman/Test\ Environment.postman_environment.json --reporters cli,junit --reporter-junit-export ValidationReport.xml
    - task: PublishTestResults@2
      inputs:
        displayName: Publish Test Results
        testResultsFormat: 'JUnit'
        testResultsFiles: '$(System.DefaultWorkingDirectory)/ValidationReport.xml'
        mergeTestResults: true